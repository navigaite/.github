name: Vercel Deployment

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "18"
      vercel-project-id:
        description: "Vercel project ID"
        required: true
        type: string
      environment:
        description: "Deployment environment (production, preview)"
        required: true
        type: string
      deployment-url-output:
        description: "Name of the output to store deployment URL"
        required: false
        type: string
        default: "deployment-url"
      comment-on-pr:
        description: "Whether to comment on PR with preview URL"
        required: false
        type: boolean
        default: false
    secrets:
      vercel-token:
        description: "Vercel token for deployment"
        required: true
      github-token:
        description: "GitHub token with repo scope"
        required: true
    outputs:
      deployment-url:
        description: "URL of the Vercel deployment"
        value: ${{ jobs.deploy.outputs.deployment-url }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.vercel-token }}

      - name: Deploy to Vercel
        id: deploy
        run: |
          if [[ "${{ inputs.environment }}" == "production" ]]; then
            DEPLOYMENT_URL=$(vercel deploy --prod --token=${{ secrets.vercel-token }} --project=${{ inputs.vercel-project-id }})
          else
            DEPLOYMENT_URL=$(vercel deploy --token=${{ secrets.vercel-token }} --project=${{ inputs.vercel-project-id }})
          fi
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: Comment on PR with Preview URL
        if: ${{ inputs.comment-on-pr && github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `ðŸš€ Preview deployed to: ${{ steps.deploy.outputs.deployment-url }}`
            });
