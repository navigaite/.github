---
# This workflow updates te cards on the github project board.

# The trigger should be:
# on:
#   # The issue.opened event below is only needed for the "immediate" mode.
#   # The issue.assigned event below is only needed for the default ("auto") mode.
#   issues:
#     types: [opened, edited, assigned]
#   pull_request:
#     types: [opened, synchronize, reopened, review_requested, closed]
#     branches-ignore: [main, dev, release/**]
name: "📝 Issue Change"

run-name: "${{ github.workflow }} by ${{ github.actor }}"

on:
  workflow_call:

jobs:
  add-item:
    if: github.event_name == 'issues' && github.event.action == 'opened'
    name: Add item to project
    runs-on: ubuntu-latest
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/add-to-project@31b3f3ccdc584546fc445612dec3f38ff5edb41c # This adds the issue to the project
        id: add-project
        with:
          project-url: ${{ env.PROJECT_URL }}
          github-token: ${{ steps.generate-token.outputs.token }}

      - uses: titoportas/update-project-fields@421a54430b3cdc9eefd8f14f9ce0142ab7678751
        with:
          project-url: ${{ env.PROJECT_URL }}
          github-token: ${{ steps.generate-token.outputs.token }}
          item-id: ${{ steps.add-project.outputs.itemId }} # Use the item-id output of the previous step
          field-keys: Status
          field-values: 🆕 New

  assigned-item:
    if: github.event_name == 'issues' && github.event.action == 'assigned'
    name: Assign item
    runs-on: ubuntu-latest
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4

      - uses: monry/actions-get-project-item-id@v2
        id: get-item-id
        with:
          # Personal Access Token that with `repo` and `org:read` are granted.
          github-token: ${{ steps.generate-token.outputs.token }}
          project-owner: "navigaite"
          project-number: ${{ env.PROJECT_ID }}
          issue-repository: ${{ github.repository}}
          issue-number: ${{ github.event.issue.number }}

      - uses: titoportas/update-project-fields@421a54430b3cdc9eefd8f14f9ce0142ab7678751
        with:
          project-url: ${{ env.PROJECT_URL }}
          github-token: ${{ steps.generate-token.outputs.token }}
          item-id: ${{ steps.get-item-id.outputs.project-item-id }} # Use the item-id output of the previous step
          field-keys: Status
          field-values: 🏗 In progress

  get_issues_linked_to_pr:
    if: github.event_name == 'pull_request'
    name: Get issues linked to PR
    runs-on: ubuntu-latest
    env:
      ORGANIZATION: navigaite
      REPO_NAME: ${{ github.event.repository.name }}
    outputs:
      matrix: ${{ steps.get-issues.outputs.LINKED_ISSUES }}
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - name: Set GITHUB_TOKEN
        run: echo "GITHUB_TOKEN=${{ steps.generate-token.outputs.token }}" >> $GITHUB_ENV

      - name: Get Linked Issues
        id: get-issues
        run: |
          gh api graphql -f query='
            query getLinkedIssues($owner: String!, $name: String!, $number: Int!) {
              repository(owner: $owner, name: $name) {
                pullRequest(number: $number) {
                  id
                  closingIssuesReferences(first: 100) {
                    nodes {
                      number
                    }
                  }
                }
              }
            }' -F owner=$ORGANIZATION -F name=$REPO_NAME -F number=${{ github.event.pull_request.number }} > project_data.json

          echo 'LINKED_ISSUES='$(jq '.data.repository.pullRequest.closingIssuesReferences' project_data.json) >> $GITHUB_OUTPUT

  in_review:
    if: github.event.action == 'review_requested'
    name: "Set issue status [In review]"
    needs: get_issues_linked_to_pr
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.get_issues_linked_to_pr.outputs.matrix) }}
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - uses: monry/actions-get-project-item-id@v2
        id: get-item-id
        with:
          # Personal Access Token that with `repo` and `org:read` are granted.
          github-token: ${{ steps.generate-token.outputs.token }}
          project-owner: "navigaite"
          project-number: ${{ env.PROJECT_ID }}}
          issue-repository: ${{ github.repository}}
          issue-number: ${{ matrix.nodes.number }}

      - uses: titoportas/update-project-fields@421a54430b3cdc9eefd8f14f9ce0142ab7678751
        with:
          project-url: ${{ env.PROJECT_URL }}
          github-token: ${{ steps.generate-token.outputs.token }}
          item-id: ${{ steps.get-item-id.outputs.project-item-id }} # Use the item-id output of the previous step
          field-keys: Status
          field-values: 👀 In review

  done:
    if: github.event.pull_request.merged == true
    name: "Set issue status [Done]"
    needs: get_issues_linked_to_pr
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.get_issues_linked_to_pr.outputs.matrix) }}
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - uses: monry/actions-get-project-item-id@v2
        id: get-item-id
        with:
          # Personal Access Token that with `repo` and `org:read` are granted.
          github-token: ${{ steps.generate-token.outputs.token }}
          project-owner: "navigaite"
          project-number: ${{ env.PROJECT_ID }}
          issue-repository: ${{ github.repository}}
          issue-number: ${{ matrix.nodes.number }}

      - uses: titoportas/update-project-fields@421a54430b3cdc9eefd8f14f9ce0142ab7678751
        with:
          project-url: ${{ env.PROJECT_URL }}
          github-token: ${{ steps.generate-token.outputs.token }}
          item-id: ${{ steps.get-item-id.outputs.project-item-id }} # Use the item-id output of the previous step
          field-keys: Status
          field-values: ✅ Done
