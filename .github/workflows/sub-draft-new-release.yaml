---
on:
  workflow_call:
    inputs:
      semver_increment:
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: ðŸ”¢ Draft new Release
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”‘ Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ðŸ”¢ Update version
        id: update-version
        env:
          VERSION_INCREMENT: ${{ github.event.inputs.semver_increment }}
        run: |
          version=$(npm version --no-git-tag-version ${{ env.VERSION_INCREMENT }})
          echo "New version: $version"
          echo "NEW_VERSION=${version}" >> $GITHUB_OUTPUT

      - name: ðŸ‘¤ Set user
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global user.name "navigaite-workflow-app[bot]"
          git config --global user.email "133966083+navigaite-workflow-app[bot]@users.noreply.github.com"

      - name: ðŸŒ¿ Create Release Branch
        run: |
          git checkout dev
          git checkout -b release/${{ steps.update-version.outputs.NEW_VERSION }}

      - name: ðŸ’¾ Commit Version Update and push changes
        run: |
          git add package.json package-lock.json
          git commit -m "chore(release): Bump version to ${{ steps.update-version.outputs.NEW_VERSION }}"
          git push origin release/${{ steps.update-version.outputs.NEW_VERSION }}

      - name: ðŸš€ Run the Action
        uses: devops-infra/action-pull-request@v0.6.0
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
          source_branch: release/${{ steps.update-version.outputs.NEW_VERSION }}
          target_branch: main
          title: 'release: Merge ${{ steps.update-version.outputs.NEW_VERSION }} to main'
          body: |
            **Automated pull request!**

            This PR prepares for the release of version **${{ steps.update-version.outputs.NEW_VERSION }}**
          label: 'type: release ðŸš€,automated pr ðŸ¤–,new version ðŸ†•'
