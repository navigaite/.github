---
# This workflow deploys to PROD.
# The trigger should be:
# on:
#   push:
#     branches:
#       - main
name: ðŸš€ Create new Release

run-name: '${{ github.workflow }} by ${{ github.actor }}'

on:
  # trunk-ignore(yamllint/empty-values)
  workflow_call:
  # trunk-ignore(yamllint/empty-values)
  workflow_dispatch:

permissions: read-all

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  create-release:
    if:
      github.event.pull_request.merged == true && (startsWith(github.event.pull_request.head.ref, 'release/') ||
      startsWith(github.event.pull_request.head.ref, 'hotfix/'))
    name: Create Release
    permissions:
      contents: write
      discussions: write
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.current_version }}
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - name: Node Setup
        uses: ./.github/workflows/sub-setup.yaml

      - name: Get Current Version
        id: version
        run: echo "current_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Tag version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
          custom_tag: ${{ steps.version.outputs.current_version }}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ./.github/action-gh-release-config.json
          mode: COMMIT
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ steps.generate-token.outputs.token }}
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{steps.github_release.outputs.changelog}}
          make_latest: true

  back-merge:
    name: Back-Merge to Develop
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Generate a github token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}
          ref: main

      - name: Create PR for back-merge
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
          source_branch: main
          target_branch: dev
          title: 'ci: Back-Merge Release v${{ needs.create-release.outputs.version }} to dev'
          body: |
            **Automated back-merge pull request**

            This PR merges the released version v${{ needs.create-release.outputs.version }}
            from main back into dev.

            This ensures that any hotfixes or changes made during the release process are
            incorporated into the dev branch.
          label: 'type: release ðŸš€,automated pr ðŸ¤–,new version ðŸ†•, back-merge'
          draft: false
